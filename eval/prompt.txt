QUESTION:
Anton has the integer x. He is interested what positive integer, which doesn't exceed x, has the maximum sum of digits.

Your task is to help Anton and to find the integer that interests him. If there are several such integers, determine the biggest of them. 


-----Input-----

The first line contains the positive integer x (1 ≤ x ≤ 10^18) — the integer which Anton has. 


-----Output-----

Print the positive integer which doesn't exceed x and has the maximum sum of digits. If there are several such integers, print the biggest of them. Printed integer must not contain leading zeros.


-----Examples-----
Input
100

Output
99

Input
48

Output
48

Input
521

Output
499

PLAN:
1. Read input as a string, convert each character to an integer, and store it in a list
2. Initialize 'best' as a copy of 'num', representing the best possible modified number
3. Iterate over the digits in reverse order (starting from the last digit)
    3.1 If the current digit is 0, skip to the next iteration
    3.2 Decrease the current digit by 1
    3.3 Set all subsequent digits (to the right) to 9
    3.4 If the sum of digits of the modified number is greater than the sum of the current 'best', update 'best' to the new number
4. Convert the best number list back into a string, remove leading zeros, and print the result


CODE:
```python
num = list(map(int, input()))
best = num[:]
for i in range(-1, -len(num) - 1, -1):
    if num[i] == 0:
        continue
    num[i] -= 1
    for j in range(i + 1, 0):
        num[j] = 9
    if sum(num) > sum(best):
        best = num[:]
s = ''.join(map(str, best)).lstrip('0')
print(s)
```
